#!/usr/bin/env zsh

function dotfiles() {
  overwrite_all=false
  backup_all=false
  skip_all=false

  if [ "$1" = "" ]
  then
    1=$SETUP_PATH/dotfiles
    # echo_fail "dotfiles expect one argument (the folder to find files to links)"
    # return
  fi
  ORIGIN=$1

  if [ "$FIRSTRUN" = "true" ]
  then
    overwrite_all=true
  fi

  for src in `ls -A1 $ORIGIN`
  do
    if [ "$src" = ".DS_Store" ] || [ "$src" = ".git" ]
    then
      continue
    fi

    source=$ORIGIN/$src
    dest="$HOME/$src"

    if [ -f $dest ] || [ -d $dest ] || [ -h $dest ]
    then
      overwrite=false
      backup=false
      skip=false

      if [ -h $dest ] && [ $source = `readlink $dest` ]
      then
        # meh, do nothing, just skip silently :)
      else
        if [ $overwrite_all = "false" ] && [ $backup_all = "false" ] && [ $skip_all = "false" ]
        then
          echo_user "File already exists: `basename $source`, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
          read -k action
          echo ''

          case "$action" in
            o ) overwrite=true;;
            O ) overwrite_all=true;;
            b ) backup=true;;
            B ) backup_all=true;;
            s ) skip=true;;
            S ) skip_all=true;;
            * ) ;;
          esac
        fi

        if [ $overwrite = "true" ] || [ $overwrite_all = "true" ]
        then
          rm -rf $dest
          echo_success "removed $dest"
        fi

        if [ $backup = "true" ] || [ $backup_all = "true" ]
        then
          mv $dest $dest\.backup
          echo_success "moved $dest to $dest.backup"
        fi

        if [ $skip = "false" ] && [ $skip_all = "false" ]
        then
          link_files $source $dest
        else
          echo_success "skipped $source"
        fi
      fi
    else
      link_files $source $dest
    fi
  done
}
